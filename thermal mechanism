import numpy as np
import matplotlib.pyplot as plt
import mpl_toolkits.mplot3d as m3d
from mpl_toolkits.mplot3d import Axes3D
from matplotlib.pyplot import *

x = np.array([0.87,0.93,1.3,1.02,1.37,1.18,1.11,1.24,1.65,1.43,1.73,1.56])
z = np.array([79.288,76.842,73.88,77.78,61.196,87.79,84.624,70.032,63.56,66.4,59.65,64.434])
y = np.array([120.1,133.2,135.1,114.1,127.9,131.6,168.9,150.4,124.3,141.1,117.6,128.2])

data = np.concatenate((x[:, np.newaxis], 
                       y[:, np.newaxis], 
                       z[:, np.newaxis]), 
                      axis=1)

# Calculate the mean of the points, i.e. the 'center' of the cloud
datamean = data.mean(axis=0)

# Do an SVD on the mean-centered data.
uu, dd, vv = np.linalg.svd(data - datamean)

# vector of the 'best fit' line in the least squares sense.

# generate some points along this best fit line, for plotting.
linepts = vv[0] * np.mgrid[-30:50:80j][:, np.newaxis]

# shift by the mean to get the line in the right place
linepts += datamean

# Verify that everything looks right.

ax = m3d.Axes3D(plt.figure())
ax.scatter3D(*data.T)
ax.plot3D(*linepts.T)

# limit of axis.

ax.set_xlim(0,max(x)+2)
ax.set_ylim(min(y)-10,max(y)+10)
ax.set_zlim(min(z)-10,max(z)+10)

# leveling of axis.

ax.set_xlabel('distance between coal and camera')
ax.set_ylabel('Temperature in thermocouple')
ax.set_zlabel('Temperature in thermography')

plt.show()
